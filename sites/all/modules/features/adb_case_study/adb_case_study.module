<?php

/**
 * @file
 * Code for the ADB Case Study feature.
 */
include_once 'adb_case_study.features.inc';


/**
 * Custom module responsible for various specific customizations on
 * menu showing on node case study for subsections.
 *
 * @author Shamsher alam <alam.shamsher@srijan.in>
 */

/**
 * Implements hook_block_info().
 */
function adb_case_study_block_info() {
  $blocks = array();
  $blocks['subsection_menu'] = array(
    'info' => t('Sub Section Menu'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function adb_case_study_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'subsection_menu':
      $block['subject'] = '';
      $block['content'] = _adb_case_study_block_sub_sction_menu_content();
      break;
  }
  return $block;
}

/**
 *  Define menu link for custom section on case study.
 * 
 *  @return string
 */
function _adb_case_study_block_sub_sction_menu_content() {
  // Get current path and get node ID.
  $current_path = explode('/', current_path());
  $current_node = $current_path[1];
  if (isset($current_node) && is_numeric($current_node)) {

    // Create link for sub section menu and combine for continue reading.
    $linklist = array(
      'overview' => array(
        'title' => t('Overview'),
        'href' => 'node/' . $current_node
      ),
      'context' => array(
        'title' => t('Challenges'),
        'href' => 'challenges/' . $current_node
      ),
      'challenges' => array(
        'title' => t('Lessons'),
        'href' => 'lessons/' . $current_node
      ),
      'solutions' => array(
        'title' => t('Solutions'),
        'href' => 'solutions/' . $current_node
      ),
      'impact' => array(
        'title' => t('Impact'),
        'href' => 'impact/' . $current_node
      ),
      'lessions' => array(
        'title' => t('Lessions'),
        'href' => 'lessions' . $current_node
      ),
      'lessions' => array(
        'title' => t('Additional resources'),
        'href' => 'resources/' . $current_node
      )
    );
  }

  return _get_theme_list_content($linklist);
}

//taxonomy/term/tid
function adb_case_study_preprocess_node(&$variables) {
  global $baseUrl;
  if ($variables['type'] == 'case_study') {


    // Case study date field value.
    $variables['node_field_date'] = _get_date_formatted_value('j F Y', $variables['field_date'][0]['value']);
    $node_vocab_field = array(
      'field_tags',
      'field_topic',
      'field_countries'
    );
    // Case Study Tagging in landing page.
    $variables['node_field_tagging'] = _make_term_tagging($node_vocab_field, $variables);
    // Banner image content.
    $variables['banner_image'] = theme('image_style', array(
      'style_name' => 'node_banner_image',
      'path' => $variables['field_banner_image'][0]['uri']
      )
    );
    // Download Link for node page
    $variables['download_link'] = l(t('Download'), file_force_create_url($variables['field_download_file'][0]['uri']), array('attributes' => array('target' => '_blank')));
    // Print Node page.
    $variables['print_node'] = l(t('Print'), $baseUrl . 'print/node/' . $variables['nid']);
    // Social share icon list.
    $variables['social_share'] = sharethis_block_contents();
    // Body content.
    $variables['body'] = $variables['body'][0]['value'];

    // Project Snapshot content.
    foreach ($variables['field_project_snapshot'] as $value) {
      $entity_ids[] = $value;
    }
    $project_snapshot = entity_load('field_collection_item', $entity_ids);
    $output = '';
    $output.='<div class="project-snapshot"><span class="label-dates">Dates</span>';
    foreach ($project_snapshot as $value) {
      $output.='<div class="project-year">' . _get_date_formatted_value('Y', $value->field_date[LANGUAGE_NONE][0]['value']);
      $output.='<div class="description">' . $value->field_description[LANGUAGE_NONE][0]['value'] . '</div></div>';
    }
    $output.='</div>';
    $variables['project_snapshot'] = $output;
  }
}

/**
 * 
 *  @param type $field_name machine name of field
 *  @param type $taxonomy_refernce_term variable array
 *  @return string
 */
function _make_term_tagging($field_name, $taxonomy_refernce_term) {
  foreach ($field_name as $name) {
    $term_name = $taxonomy_refernce_term[$name];
    foreach ($term_name as $value) {
      $linklist[$value['taxonomy_term']->name] = array(
        'title' => t($value['taxonomy_term']->name),
        'href' => 'search/' . $value['taxonomy_term']->name
      );
    }
  }

  return _get_theme_list_content($linklist);
}

/**
 * 
 * @param type $itemlist list of $key and $value of link
 * @return string
 */
function _get_theme_list_content($itemlist) {
  $heading = array(
    'text' => t('List'),
    'level' => 'h4',
    'class' => 'menu-categories-title'
  );
  $attributes = array(
    'class' => 'menu-categories'
  );
  return theme_links(array(
    'links' => $itemlist,
    'attributes' => $attributes,
    'heading' => $heading
    )
  );
}

/**
 * 
 * @param type $format is format of date
 * @param type $date_time give string value of date and time
 * @return string
 */
function _get_date_formatted_value($format, $date_time) {
  $unix_time_stamp = explode(' ', $date_time);
  return gmdate($format, strtotime($unix_time_stamp[0]));
}
