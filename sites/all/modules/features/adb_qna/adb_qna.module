<?php

/**
 * @file
 * Code for the Question and answer feature.
 */

include_once 'adb_qna.features.inc';

/**
 * Implements hook_form_alter().
 */
function adb_qna_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'question_answer_node_form':
      $form['#validate'][] = 'adb_qna_topic_validate';

      break;
  }
}

/**
 * Custom submit handler to check every topic belongs to same parent.
 */
function adb_qna_topic_validate($form, &$form_state) {
  $last_parent_tid = 0;
  $langcode = $form_state['values']['language'];
  $validate = TRUE;

  // Iterate through every topics and check whether they belong to same parent.
  foreach ($form_state['values']['field_topic'][$langcode] as $value) {
    $parents = taxonomy_get_parents($value['tid']);

    if (empty($parents)) {
      $current_parent_tid = $value['tid'];
    }
    else {
      // We consider that the taxonomy has only two levels.
      // Pop out the first parent.
      $term = array_shift($parents);
      $current_parent_tid = $term->tid;
    }

    // Make sure `$last_parent_tid` is different from the `$current_parent_tid`.
    // If different then invalidate the submission.
    if ($last_parent_tid != 0 && ($last_parent_tid != $current_parent_tid)) {
      $validate = FALSE;
      break;
    }
    else {
      $last_parent_tid = $current_parent_tid;
    }
  }

  if (!$validate) {
    form_set_error('field_topic', t('Only one parent is allowed for topics'));
  }
}

/**
 * Implements hook_views_pre_render().
 */
function adb_qna_views_pre_render(&$view) {
  switch ($view->name) {
    case 'views_qna_term':
      if (!empty($view->result)) {
        // Obtain metadata that we are going to show in header.
        $content_types = node_type_get_types();
        $current_term = $view->result[0]->field_field_topic[0]['raw']['taxonomy_term'];

        $parents = taxonomy_get_parents($current_term->tid);
        if (empty($parents)) {
          $vocabulary = taxonomy_vocabulary_machine_name_load('topics');
          // Make sure you show only the parent terms.
          $siblings = taxonomy_get_tree($vocabulary->vid, $parent = 0, $depth = 1);
        }
        else {
          $term = array_shift($parents);
          $siblings = taxonomy_get_children($term->tid);
        }

        $view->header['area_text_custom']->options['content'] = theme('adb_qna_header', array(
          'type_name' => $content_types['question_answer']->name,
          'current_term' => $current_term,
          'siblings' => $siblings,
        ));
      }

      break;
  }
}

/**
 * Implements hook_theme().
 */
function adb_qna_theme($existing, $type, $theme, $path) {
  return array(
    'adb_qna_header' => array(
      'variables' => array(
        'type_name' => NULL,
        'current_term' => NULL,
        'siblings' => NULL,
      ),
      'template' => 'templates/adb-qna-header',
    ),
  );
}
